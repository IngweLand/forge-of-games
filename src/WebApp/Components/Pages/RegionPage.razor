@page "/campaign/region/{regionId}"
@using Ingweland.Fog.Application.Client.Web.Localization
@using Ingweland.Fog.Application.Client.Web.ViewModels.Hoh.Battle
@using Ingweland.Fog.WebApp.Client.Components.Elements
@using Ingweland.Fog.WebApp.Components.Elements
@using Ingweland.Fog.WebApp.Services.Abstractions
@using Microsoft.Extensions.Localization
@inject ICampaignUiServerService CampaignUiServerService;
@inject IStringLocalizer<FogResource> Loc
<HeadContent>
    <meta name="description"
          content="Detailed campaign region info for Heroes of History. Explore encounters, enemy squads, and battle rewards.">
    <meta name="keywords" content="Heroes of History campaign region, game encounters, battle rewards, enemy squads">
</HeadContent>
<PageTitle>@_pageTitle</PageTitle>
@if (!_isInitialized)
{
    <div class="d-flex justify-content-center align-items-center vh-100">
        <div class="spinner-grow" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    <div class="d-flex flex-column align-items-center gap-3 pb-4">
        <div class="container-fluid py-3 fog-container mb-3">
            <h3 class="text-center mb-3 user-select-none">@_region!.Name</h3>
            <hr class="w-100 mb-3">
            <div class="d-flex flex-wrap justify-content-center gap-4">
                @foreach (var reward in _region.Rewards)
                {
                    <ResourceWithValue ResourceValue="@reward"/>
                }
            </div>
        </div>
        <h4 class="text-center user-select-none">@Loc[FogResource.Hoh_Encounters]</h4>
        @foreach (var encounter in _region.Encounters)
        {
            <EncounterComponent Encounter="@encounter"/>
        }
    </div>
}


@code {

    [Parameter]
    public string RegionId { get; set; }

    private string _pageTitle = "Region";
    private bool _isInitialized;
    private RegionViewModel? _region;

    protected override async Task OnInitializedAsync()
    {
        _region = await CampaignUiServerService.GetRegionAsync(RegionId);
        if (_region == null)
        {
            return;
        }

        _pageTitle = $"Region - {_region.Name}";

        _isInitialized = true;
    }

}