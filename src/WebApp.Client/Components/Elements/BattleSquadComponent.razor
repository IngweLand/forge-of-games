@using Ingweland.Fog.Application.Client.Web.Extensions
@using Ingweland.Fog.Application.Client.Web.ViewModels.Hoh.Battle
@using Size = MudBlazor.Size
<div class="fog-container component-root @(Squad.IsHero ? "stripes" : "")">
    <div class="unit-image-container">
        <img src="@Squad.ImageUrl">
    </div>

    <div class="labels-container" style="min-width: 0">
        <div class="title">
            <span class="text-truncate">@Squad.Name</span>
        </div>
        <div class="subtitle"
             style="font-size: 0.75rem !important;">@Squad.Level</div>
    </div>

    @if (Squad.ColorAffinity != null)
    {
        <div class="vertical-split-container">
            <div class="split-container-item"
                 style="background-color: @Squad.ColorAffinity.WeakAgainst.ToCssColorVar()">
                <MudIcon Icon="@Icons.Material.Filled.ThumbUp" Size="Size.Small"/>
            </div>
            <div class="split-container-item"
                 style="background-color: @Squad.ColorAffinity.StrongAgainst.ToCssColorVar()">
                <MudIcon Icon="@Icons.Material.Filled.ThumbDown" Size="Size.Small"/>
            </div>
        </div>
    }

    <div class="vertical-split-container" style="background-color: @Squad.Color.ToCssColorVar()">
        <div class="split-container-item unit-type-icon-container">
            <img src="@Squad.TypeIconUrl">
        </div>
        @if (!Squad.IsHero)
        {
            <div class="split-container-item unit-amount-container">
                <span>@Squad.Amount</span>
            </div>
        }
    </div>
</div>

@code {

    [Parameter]
    public required BattleWaveSquadViewModel Squad { get; set; }

}