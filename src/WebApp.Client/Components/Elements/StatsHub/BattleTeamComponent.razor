@using Ingweland.Fog.Application.Client.Web.Localization
@using Ingweland.Fog.Application.Client.Web.Providers.Interfaces
@using Ingweland.Fog.Application.Client.Web.ViewModels.Hoh.Battle
@using Ingweland.Fog.Models.Hoh.Enums
@using Microsoft.Extensions.Localization
@using MudBlazor.Utilities
@inject IStringLocalizer<FogResource> Loc
@inject IAssetUrlProvider AssetUrlProvider

<div class="fog-container component-root user-select-none">
    <div class="@StatusContainerClassname">
        <span>
            @switch (Data.ResultStatus)
            {
                case BattleResultStatus.Win:
                    @Loc[FogResource.Common_Victory]
                    break;
                case BattleResultStatus.Defeat:
                    @Loc[FogResource.Common_Defeat]
                    break;
            }
        </span>
        @if (Data.StatsId.HasValue)
        {
            <img class="stats-button" src="@AssetUrlProvider.GetHohIconUrl("icon_flat_battlestats")"
                 @onclick="@(() => OnBattleStatsClicked.InvokeAsync(Data))"/>
        }

    </div>
    <div class="content-row">
        @foreach (var unit in Data.PlayerSquads)
        {
            <BattleHeroComponent BattleHero="unit"/>
        }
    </div>
</div>

@code {

    [Parameter]
    public BattleSummaryViewModel Data { get; set; }

    [Parameter]
    public EventCallback<BattleSummaryViewModel> OnBattleStatsClicked { get; set; }

    private string StatusContainerClassname => new CssBuilder("header-row")
        .AddClass("victory", Data.ResultStatus == BattleResultStatus.Win)
        .AddClass("defeat", Data.ResultStatus == BattleResultStatus.Defeat)
        .Build();

}