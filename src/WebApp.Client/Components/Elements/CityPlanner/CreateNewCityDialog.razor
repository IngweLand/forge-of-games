@using Ingweland.Fog.Application.Client.Web.CityPlanner
@using Ingweland.Fog.Application.Client.Web.Localization
@using Ingweland.Fog.Application.Core.CityPlanner.Abstractions
@using Ingweland.Fog.Application.Core.Constants
@using Ingweland.Fog.Dtos.Hoh.City
@using Ingweland.Fog.Dtos.Hoh.CityPlanner
@using Ingweland.Fog.Models.Hoh.Enums
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<FogResource> Loc
@inject ICityPlannerDataService CityPlannerDataService
<MudDialog Style="padding: 24px">
    <TitleContent>
        <MudText Typo="Typo.h6">@Loc[FogResource.CityPlanner_CreateNewCity]</MudText>
    </TitleContent>
    <DialogContent>
        @if (_dialogItems != null)
        {
            <MudTextField T="string"
                          @bind-Value="@_inputText"
                          Label="@Loc[FogResource.CityPlanner_CityName]"
                          MaxLength="@FogConstants.NAME_MAX_CHARACTERS"
                          Counter="@FogConstants.NAME_MAX_CHARACTERS"
                          Immediate="true"
                          Validation="@(new Func<string, IEnumerable<string>>(ValidateInput))"
                          Required="true"/>

            <MudSelect Label="@Loc[FogResource.Hoh_City]" Value="_selectedCity" T="NewCityDialogItemDto"
                       Variant="Variant.Outlined" Margin="Margin.Dense" Dense="true" ValueChanged="CityOnCHanged">
                @foreach (var item in _dialogItems)
                {
                    <MudSelectItem Value="item">@item.CityName</MudSelectItem>
                }
            </MudSelect>

            @if (_selectedCity.Wonders.Count > 1)
            {
                <MudSelect Label="@Loc[FogResource.Hoh_WorldWonder]" @bind-Value="_selectedWonder"
                           T="WonderDto" Variant="Variant.Outlined" Margin="Margin.Dense" Dense="true">
                    @foreach (var wonder in _selectedCity.Wonders)
                    {
                        <MudSelectItem Value="wonder">@wonder.WonderName</MudSelectItem>
                    }
                </MudSelect>
            }
        }
        else
        {
            <LoadingIndicator/>
        }
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">@Loc[FogResource.Common_Cancel]</MudButton>
        <MudButton Color="Color.Success"
                   OnClick="Create"
                   Disabled="@(_dialogItems == null || !string.IsNullOrEmpty(ValidateInput(_inputText).FirstOrDefault()))">
            @Loc[FogResource.Common_Create]
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    private NewCityDialogItemDto _selectedCity;
    private WonderDto? _selectedWonder;

    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; }

    private IReadOnlyCollection<NewCityDialogItemDto>? _dialogItems;

    private string _inputText;

    protected override async Task OnInitializedAsync()
    {
        _dialogItems = await CityPlannerDataService.GetNewCityDialogItemsAsync();
        _selectedCity = _dialogItems.First(src => src.CityId == CityId.Capital);
    }

    private IEnumerable<string> ValidateInput(string input)
    {
        if (string.IsNullOrWhiteSpace(input))
            yield return Loc[FogResource.CityPlanner_NameRequiredError];
        else if (input.Length > FogConstants.NAME_MAX_CHARACTERS)
            yield return Loc[FogResource.CityPlanner_NameTooLongError, FogConstants.NAME_MAX_CHARACTERS];
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private void Create()
    {
        if (string.IsNullOrWhiteSpace(_inputText))
        {
            return;
        }

        MudDialog.Close(DialogResult.Ok(new NewCityRequest
        {
            Name = _inputText,
            CityId = _selectedCity.CityId,
            WonderId = _selectedWonder?.Id ?? WonderId.Undefined,
        }));
    }

    private void CityOnCHanged(NewCityDialogItemDto selectedItem)
    {
        _selectedCity = selectedItem;
        if (_selectedCity.Wonders.Count > 0)
        {
            _selectedWonder = _selectedCity.Wonders.First();
        }
        
        StateHasChanged();
    }

}
