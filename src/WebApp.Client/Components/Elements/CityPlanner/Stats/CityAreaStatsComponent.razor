@using Ingweland.Fog.Application.Client.Web.CityPlanner.Stats
@using Ingweland.Fog.Application.Client.Web.Localization
@using Ingweland.Fog.Application.Client.Web.Providers
@using Ingweland.Fog.Application.Client.Web.Providers.Interfaces
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<FogResource> Loc
@inject IHohStorageIconUrlProvider StorageIconUrlProvider
<div class="component-root">
    <StatsSectionHeader Label="@Loc[FogResource.CityPlanner_Area]" OnClick="OnHeaderClick"/>
    <MudCollapse Expanded="_expanded">
        <div class="main-container">
            <div class="areas-by-type-items-container">
                @foreach (var item in Data.AreasByType)
                {
                    <div class="value-container">
                        <img src="@item.IconUrl" alt="resource icon" class="value-icon">
                        <span class="value-label user-select-none">@item.Label</span>
                    </div>
                }
            </div>
            <table class="table">
                <thead>
                <tr>
                    <th class="table-left-column">@Loc[FogResource.Hoh_Building]</th>
                    <th>@Loc[FogResource.CityPlanner_Area]</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var item in Data.AreasByGroup)
                {
                    <tr class="user-select-none">
                        <td class="table-row-label table-left-column">@item.GroupName</td>
                        <td class="table-row-label">@item.Area</td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </MudCollapse>
</div>

@code {

    [Parameter]
    public required AreaStatsViewModel Data { get; set; }

    bool _expanded = true;

    private void OnHeaderClick()
    {
        _expanded = !_expanded;
    }

}