@using System.Globalization
@using Ingweland.Fog.Application.Client.Web.Localization
@using Ingweland.Fog.Application.Client.Web.ViewModels.Hoh.City
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<FogResource> Loc
<MudSelect Dense="true"
           Label="@Loc[FogResource.Hoh_Lvl]"
           ValueChanged="OnLevelChanged"
           Placeholder="---" Strict="true"
           T="BuildingViewModel" RelativeWidth="DropdownWidth.Adaptive"
           ToStringFunc="@(x => x?.Level.ToString(CultureInfo.InvariantCulture) ?? string.Empty)"
           Value="@(Levels.FirstOrDefault(x => x.Level == SelectedLevel))"
           Variant="Variant.Outlined">
    @foreach (var level in Levels)
    {
        <BuildingLevelSelectItemComponent Dense="true" Data="level"/>
    }
</MudSelect>
<style>
    .mud-input > div.mud-input-root {
        display: inline-flex !important;
        align-items: center;
        justify-content: flex-start;
    }
</style>

@code {

    [Parameter]
    [EditorRequired]
    public IReadOnlyCollection<BuildingViewModel> Levels { get; set; } = [];

    [Parameter]
    public int SelectedLevel { get; set; } = -1;

    [Parameter]
    public EventCallback<int> LevelChanged { get; set; }

    private Task OnLevelChanged(BuildingViewModel building)
    {
        return LevelChanged.InvokeAsync(building.Level);
    }

}